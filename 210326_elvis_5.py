# Необходимо реализовать функцию, которая получает на вход две коллекции строк, по ним вычисляет и печатает: 
# * количество элементов, которые общие между парой коллекций строк 
# * количество элементов, которые есть только в первой коллекции
# * количество элементов, которые есть только во второй коллекции
# 
# Вызывающая сторона гарантирует, что в пределах каждой коллекции все строки отличаются.
# Порядок строк в контейнерах может быть разный. 
# 
# Функция является частью теста, а не основного приложения, типичная длина коллекции 1-3 элемента.
# Поэтому на первом месте читаемость кода, а не производительность.
# 
# Язык реализации - тот на котором вам удобней всего реализовать такую функцию, 
# соответственно конкретные коллекции зависят от языка.
# 
# для руthon - list из экземпляров str	def dump_diff_count(c1, c2) 
# для C# - System.Collections.Generic.List<string>
# для C++ - void dump_diff_court(const std::vector<std::string>& c1, const std::vector<std::string>& c2) 
# можно и любой другой язык по желанию, соответственные ему коллекции
# 
# Достаточно написать только саму функцию, подключения библиотек писать не надо.

def dump_diff_count(c1, c2):
	union = set(c1 + c2)
	return len(set(c1).intersection(set(c2))), \
		len(union) - len(c2), len(union) - len(c1)
	    
		
if __name__ == "__main__":
	print(dump_diff_count(["a", "b", "c", "d"], ["aa", "b", "cc"]))
